:root {
    --body-color: rgba(0, 0, 160, 0.9);
    --text-color: whitesmoke;
    --cube-size: 24vmin;
    --cube-size-mini: 15vmin;
    --cube-color1: rgba(255, 0, 0, 0.7);
    --cube-color2: rgba(255, 255, 0, 0.7);
    --cube-color3: rgba(0, 255, 0, 0.7);
    --cube-color4: rgba(0, 255, 255, 0.7);
    --cube-color5: rgba(0, 0, 255, 0.7);
    --cube-color6: rgba(255, 0, 255, 0.7);
    --cube-edge: 1px solid darkgray;
    --cube-edge2: 1px solid gray;
    --cube-font-color: lightgoldenrodyellow;
    --animation-duration: 12s;
    --cube-transform: var(--animation-duration) 1 ease-in-out;
    --shadow-blur: 0.25vmin;
    --shadow-color1: whitesmoke;
    --shadow-color2: darkslateblue;
    --scene-text-color: goldenrod;
    --pulse-transform: calc(var(--animation-duration) / 5) infinite ease-in-out var(--animation-duration);
    --pulse-transform-mini: calc(var(--animation-duration) / 5) infinite ease-in-out;
}

.animation {
    margin: calc(var(--cube-size) / 6 - 1px);
    perspective: calc(var(--cube-size) * 6 - 1px);
}

.animation {
    margin: calc(var(--cube-size) / 6 - 1px);
    perspective: calc(var(--cube-size) * 6 - 1px);
}

.cube {
    box-sizing: border-box;
    position: absolute;
    width: var(--cube-size);
    height: var(--cube-size);
    top: calc(var(--cube-size) / 4 - 1px);
    left: calc(var(--cube-size) / 4 - 1px);
    transform-style: preserve-3d;
    transform: translateZ(calc(var(--cube-size) / -2)) rotateX(325deg) rotateY(420deg);
    transform-origin: 50% 50%;
}

.cube-mini {
    box-sizing: border-box;
    position: absolute;
    width: var(--cube-size-mini);
    height: var(--cube-size-mini);
    top: calc(var(--cube-size-mini) / 6 - 1px);
    left: calc(var(--cube-size-mini) / 6 - 1px);
    transform-style: preserve-3d;
    transform: translateZ(calc(var(--cube-size-mini) / -2)) rotateX(325deg) rotateY(420deg);
    transform-origin: 50% 50%;
}

.cube.is-spinning {
    animation: spinCube var(--cube-transform);
}

@keyframes spinCube {
    0% {
        transform: translateZ(calc(var(--cube-size) / -2)) rotateX(325deg) rotateY(420deg);
    }
    50% {
        transform: translateZ(calc(var(--cube-size) / -2)) rotateX(280deg) rotateY(60deg);
    }
    100% {
        transform: translateZ(calc(var(--cube-size) / -2)) rotateX(325deg) rotateY(60deg);
    }
}

.cube_face {
    position: absolute;
    width: var(--cube-size);
    height: var(--cube-size);
    border: var(--cube-edge);
    line-height: var(--cube-size);
    font-size: calc(var(--cube-size) / 3);
    font-weight: bold;
    color: var(--cube-font-color);
    text-shadow: 0 0 calc(var(--shadow-blur) * 10) var(--shadow-color2);
    text-align: center;
}

.cube_face-mini {
    position: absolute;
    width: var(--cube-size-mini);
    height: var(--cube-size-mini);
    border: var(--cube-edge);
    line-height: var(--cube-size-mini);
    font-size: calc(var(--cube-size-mini) / 3);
    font-weight: bold;
    color: var(--cube-font-color);
    text-shadow: 0 0 calc(var(--shadow-blur) * 10) var(--shadow-color2);
    text-align: center;
}

.cube_face-front {
    background: var(--cube-color1);
    animation: pulsate var(--pulse-transform);
}

.cube_face-right {
    background: var(--cube-color2);
}

.cube_face-back {
    background: var(--cube-color3);
}

.cube_face-left {
    background: var(--cube-color4);
    animation: pulsate var(--pulse-transform);
}

.cube_face-top {
    background: var(--cube-color5);
    animation: pulsate var(--pulse-transform);
}

.cube_face-bottom {
    background: var(--cube-color6);
}

@keyframes pulsate {
    from {
        opacity: 1;
        border: var(--cube-edge);
        filter: none;
        backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
    }
    50% {
        opacity: 0.7;
        border: var(--cube-edge2);
        filter: blur(0.15vmin);
        backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
    }
    to {
        opacity: 1;
        border: var(--cube-edge);
        filter: none;
        backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
    }
}

.cube_face-top {
    transform: rotateX(90deg) rotateZ(90deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-top-mini {
    background: var(--cube-color5);
    transform: rotateX(90deg) rotateZ(90deg) translateZ(calc(var(--cube-size-mini) / 2));
    animation: pulsate var(--pulse-transform-mini);
}

.cube_face-bottom {
    transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-front {
    transform: translateZ(calc(var(--cube-size) / 2)) rotateY(0deg);
}

.cube_face-front-mini {
    background: var(--cube-color1);
    transform: translateZ(calc(var(--cube-size-mini) / 2)) rotateY(0deg);
    animation: pulsate var(--pulse-transform-mini);
}

.cube_face-front.moving {
    transform-origin: left 0;
    -webkit-transform-origin: left 0;
    animation: moveFront var(--cube-transform), pulsate var(--pulse-transform);
}

@keyframes moveFront {
    0% {
        transform: translateZ(calc(var(--cube-size) / 2)) rotateY(0deg);
    }
    50% {
        transform: translateZ(calc(var(--cube-size) / 2)) rotateY(-180deg) scaleX(66%);
    }
    100% {
        transform: translateZ(calc(var(--cube-size) / 2)) rotateY(0deg);
    }
}

.cube_face-left {
    transform: translateZ(calc(var(--cube-size) / -2)) rotateY(-90deg);
}

.cube_face-left-mini {
    transform-origin: left 0;
    -webkit-transform-origin: left 0;
    background: var(--cube-color4);
    transform: translateZ(calc(var(--cube-size-mini) / -2)) rotateY(-90deg);
    animation: pulsate var(--pulse-transform-mini);
}

.cube_face-left.moving {
    transform-origin: left 0;
    -webkit-transform-origin: left 0;
    animation: moveLeft var(--cube-transform), pulsate var(--pulse-transform);
}

@keyframes moveLeft {
    0% {
        transform: translateZ(calc(var(--cube-size) / -2)) rotateY(-90deg);
    }
    50% {
        transform: translateZ(calc(var(--cube-size) / -2)) rotateY(-270deg) scaleX(66%);
    }
    100% {
        transform: translateZ(calc(var(--cube-size) / -2)) rotateY(-90deg);
    }
}

.cube_face-right {
    transform: translateZ(calc(var(--cube-size) / 2)) translateX(calc(var(--cube-size) * 1)) rotateY(90deg);
}

.cube_face-right.moving {
    transform-origin: left 0;
    -webkit-transform-origin: left 0;
    animation: moveRight var(--cube-transform), pulsate var(--pulse-transform);
}

@keyframes moveRight {
    0% {
        transform: translateZ(calc(var(--cube-size) / 2)) translateX(calc(var(--cube-size) * 1)) rotateY(90deg);
    }
    50% {
        transform: translateZ(calc(var(--cube-size) / 2)) translateX(calc(var(--cube-size) * 1)) rotateY(-90deg) scaleX(66%);
    }
    100% {
        transform: translateZ(calc(var(--cube-size) / 2)) translateX(calc(var(--cube-size) * 1)) rotateY(90deg);
    }
}

.cube_face-back {
    transform: translateZ(calc(var(--cube-size) / -2)) translateX(calc(var(--cube-size) * 1)) rotateY(180deg);
}

.cube_face-back.moving {
    transform-origin: left 0;
    -webkit-transform-origin: left 0;
    animation: moveBack var(--cube-transform), pulsate var(--pulse-transform);
}

@keyframes moveBack {
    0% {
        transform: translateZ(calc(var(--cube-size) / -2)) translateX(calc(var(--cube-size) * 1)) rotateY(180deg);
    }
    50% {
        transform: translateZ(calc(var(--cube-size) / -2)) translateX(calc(var(--cube-size) * 1)) rotateY(0deg) scaleX(66%);
    }
    100% {
        transform: translateZ(calc(var(--cube-size) / -2)) translateX(calc(var(--cube-size) * 1)) rotateY(180deg);
    }
}