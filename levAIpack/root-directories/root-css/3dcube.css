.scene {
	box-sizing: content-box;
	border: var(--scene-border);
	margin: calc(var(--cube-size) / 4 - 1px);
	padding: calc(var(--cube-size) / 4 - 1px);
	position: relative;
}

.scene-main {
	height: var(--cube-size);
	perspective: calc(var(--cube-size) * 2.5 - 1px);
}

.cube {
	width: var(--cube-size);
	height: var(--cube-size);
	position: relative;
	transform-style: preserve-3d;
	transform: translateZ(calc(var(--cube-size) / -2));
}

.cube-main {
	margin: 0 auto;
}

.cube.is-spinning {
	animation: spinCube var(--cube-transform);
}

@keyframes spinCube {
	0% {
		transform: translateZ(calc(var(--cube-size) / -2)) rotateX(0deg) rotateY(0deg);
	}

	50% {
		transform: translateZ(calc(var(--cube-size) / -2)) rotateX(360deg) rotateY(360deg);
	}

	100% {
		transform: translateZ(calc(var(--cube-size) / -2)) rotateX(360deg) rotateY(360deg);
	}
}

.cube_face {
	position: absolute;
	width: var(--cube-size);
	height: var(--cube-size);
	border: var(--cube-edge);
	line-height: var(--cube-size);
	font-size: calc(var(--cube-size) / 5);
	font-weight: bold;
	color: var(--cube-font-color);
	text-align: center;
}

.cube_face-front {
	background: var(--cube-color1);
}

.cube_face-right {
	background: var(--cube-color2);
}

.cube_face-back {
	background: var(--cube-color3);
}

.cube_face-left {
	background: var(--cube-color4);
}

.cube_face-top {
	background: var(--cube-color5);
}

.cube_face-bottom {
	background: var(--cube-color6);
}

.cube_face-front {
	transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-right {
	transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-back {
	transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-left {
	transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-top {
	transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-bottom {
	transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2));
}

.cube_face-front.moving {
	animation: moveFront var(--cube-transform);
}

@keyframes moveFront {
	0% {
		transform: translateZ(calc(var(--cube-size) / 2)) rotateX(0deg) rotateY(0deg);
	}

	50% {
		transform: translateZ(calc(var(--cube-size) / 2)) rotateX(0deg) rotateY(0deg);
	}

	100% {
		transform: translateZ(calc(var(--cube-size) / 2)) rotateX(0deg) rotateY(360deg);
	}
}


.playground {
	height: 800px;
	perspective: 800px;
}

.cube2 {
	transform-style: preserve-3d;
	position: relative;
	margin: 0 auto;
	width: 150px;
	height: 150px;
	/* Uncomment to make it spin  */
	animation: spin 16s infinite linear;
	margin: 20px auto;
	top: 100px;
	transform-origin: 100% 50%;
}

@keyframes spin {
	from {
		transform: rotateX(-45deg) rotateY(0deg);
	}

	to {
		transform: rotateX(-45deg) rotateY(360deg);
	}
}

@keyframes pulsate {
	from {
		opacity: 1;
	}

	50% {
		opacity: 0.25;
	}

	to {
		opacity: 1;
	}
}

.face {
	width: 300px;
	height: 300px;
	border: 6px outset #ccc;
	text-align: center;
	font-size: 60pt;
	position: absolute;
	animation: pulsate 8s infinite linear;
	background-color: #2653ad;
	transition: transform 1s ease-out, opacity 1s linear;
	box-sizing: border-box;
	transform-origin: 50% 300px;
}

.cube2:hover .left {
	transform: rotateY(90deg) translateZ(150px) rotateX(-90deg);
}

.left {
	transform: rotateY(90deg) translateZ(150px) rotateX(0deg);
	background: transparent;
	background-size: 150%;
}

.cube2:hover .right {
	transform: rotateY(-90deg) translateZ(150px) rotateX(-90deg);
}

.right {
	transform: rotateY(-90deg) translateZ(150px);
	background: transparent;
	background-size: 150%;
}

.cube2:hover .front {
	transform: translateZ(150px) rotateX(-90deg);
}

.front {
	transform: translateZ(150px);
	background: transparent;
	background-size: 180%;
}

.cube2:hover .back {
	transform: translateZ(-150px) rotateX(90deg);
}

.back {
	transform: translateZ(-150px);
	background: transparent;
	background-size: 150%;
}

.bottom {
	transform: rotateX(90deg) translateZ(-150px);
	background: transparent;
	background-size: 150%;
	transform-origin: 50% 50%;
}